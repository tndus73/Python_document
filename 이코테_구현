# 구현
- 풀이를 떠올리는 것은 쉽지만, 소스코드로 옮기기 어려운 문제
ex)
- 알고리즘은 간단한데 코드가 길어지는 문제
- 실수 연산을 다루고, 특정 소수점 자리까지 출력해야 하는 문제
- 문자열을 특정 기준에 따라 끊어 처리해야 하는 문제
- 적절한 라이브러리 찾아서 사용해야 하는 문제(순열, 조합...)

예시) 상하좌우
1. 시작 좌표 (1,1)
2. L(왼), R(오), U(위), D(아래)
3. 정사각형 공간 벗어나는 움직임은 무시
- 시뮬레이션 유형(개체를 차례로 이동), 구현 유형, 완전 탐색 유형은 서로 유사

풀이)
n = int(input)
x, y = 1, 1
plans = input().split()

dx = [0,0,-1,1]
dy = [-1,1,0,0]
move_types = ['L','R','U','D']

for plan in plans:  #이동 계획 확인
  for i in range(len(move_types)):
      if plan == move_types[i]:
          nx = x + dx[i]
          ny = y + dy[i]
  if nx < 1 or ny < 1 or nx > n or ny > n:  #공간을 벗어나는 경우 무시
      continue
  x, y = nx, ny
print(x,y)
